# Only proceed if we're in zsh
if [ -z "$ZSH_VERSION" ]; then
    echo "This file should be sourced in zsh, not bash"
    return 1
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="$HOME/bin:/opt/homebrew/bin:$PATH"
else
    export PATH="$HOME/bin:$PATH"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Brew warning about cache clean (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    export HOMEBREW_NO_ENV_HINTS=1
    # alias for updating/upgrading brew
    alias brewup="brew update && brew upgrade"
fi

# alias for UTM.app server command (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    alias utm="utmctl"
fi

# Python path (OS specific)
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="/opt/homebrew/opt/python/libexec/bin:$PATH"
else
    # Add Linux-specific Python path if needed
    export PATH="$HOME/.local/bin:$PATH"
fi

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
#ZSH_THEME="powerlevel10k/powerlevel10k"

# curl function to see domain certificates
function seecert () {
  nslookup $1
  (openssl s_client -showcerts -servername $1 -connect $1:443 <<< "Q" | openssl x509 -text | grep -iA2 "Validity")
}

# adding path for golang
export PATH="$HOME/go/bin:$PATH"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git virtualenv)
#POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status virtualenv)

source $ZSH/oh-my-zsh.sh

# User configuration
#
# Docker alias
alias updown="docker compose down && docker compose up -d"

# erdtree alias
#
alias tree="erd"

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ "$OSTYPE" == "darwin"* ]]; then
    mvim_editor() {
        mvim -v "$@"
    }
    export EDITOR=mvim_editor
else
    export EDITOR=vim
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# clear screen with control + l
bindkey "^L" clear-screen

# mvim is a replacement as vim (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    #alias vim="mvim -v"
    #alias vi="mvim -v"
fi

# Ruby configuration (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
    source /opt/homebrew/opt/chruby/share/chruby/auto.sh
fi

# 1Password ssh agent (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
fi

# vagrant aliases
alias vm="cd ~/code/support-tools/infra && VAGRANT_DEFAULT_PROVIDER=parallels ./run-vagrant.sh"
alias vms="./run-vagrant.sh -a start -e debian12"
alias vmd="./run-vagrant.sh -a destroy -e debian12"

# pip search
# https://github.com/victorgarric/pip_search
alias pip='function _pip(){
    if [ $1 = "search" ]; then
        pip_search "$2";
    else pip "$@";
    fi;
};_pip'

# rust https://rust-lang.github.io/rustup/installation/index.html
fpath+=~/.zfunc

# VSCode (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Terraform completion (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="/opt/homebrew/sbin:$PATH"
    autoload -U +X bashcompinit && bashcompinit
    complete -o nospace -C /opt/homebrew/bin/terraform terraform
fi

# Local bin path
export PATH="$PATH:$HOME/.local/bin"

# 2025-01-23 removing powerlevel10k
eval "$(starship init zsh)"

# Hishtory configuration
export PATH="$PATH:$HOME/.hishtory"
source "$HOME/.hishtory/config.zsh"

# iTerm2 integration (macOS only)
if [[ "$OSTYPE" == "darwin"* ]]; then
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
fi

export DOCKER_HOST=unix://${HOME}/.colima/default/docker.sock
