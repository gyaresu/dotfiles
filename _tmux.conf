# gyaresu added for copy paste
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# MacPorts
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#bind y run "tmux save-buffer - | pbcopy"

# Enable 256 color terminal
set -g default-terminal "screen-256color" 

# adding so that `tmux attach` tries for running sessions first and if not it creates one
new-session -n $HOST

# pane movement
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# enable utf-8 on status bar
#set -g status on
#set -g status-utf8 on

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# act like GNU screen
unbind C-b
set -g prefix C-a

# --- begin vim-tmux-navigator settings ---
# from <https://github.com/christoomey/vim-tmux-navigator>
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
# restore overwritten C-l binding (clear screen)
bind C-l send-keys 'C-l'
# --- end --- 

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Copy mode
bind ` copy-mode
unbind [
unbind p
bind p paste-buffer
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
#bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Sensible split pane keys
unbind %
#bind | split-window -h
#bind - split-window -v
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# last window
bind-key C-a last-window

set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-style bold
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=colour16
set -g message-style bg=colour221
set -g message-style bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀ #[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238 bg=colour234,nobold]⮀'
set -g status-right '#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour254,bg=colour234,nobold]#(rdio-current-track-tmux)⮂#[fg=colour16,bg=colour254,bold] #h '
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
# Activity
setw -g monitor-activity on
set -g visual-activity off

# Deprecated option
# set -g mouse-utf8 on

set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M
## Mouse stuff - deprecated as of 2.1
#setw -g mode-mouse on                                                           
#setw -g mouse-select-window on                                                  
#setw -g mouse-select-pane on                                                    
#setw -g mouse-resize-pane on
